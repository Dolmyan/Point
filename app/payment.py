import logging
from aiogram import Router, Bot
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from yookassa import Configuration, Payment

from config import TG_TOKEN, SHOP_ID, YK_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ YooKassa
Configuration.account_id = SHOP_ID
Configuration.secret_key = YK_TOKEN

router = Router()
bot = Bot(token=TG_TOKEN)
logger = logging.getLogger(__name__)


@router.callback_query(lambda c: c.data in ["go_to_payment"])
async def show_tariffs(callback_query: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑ —Ç–∞—Ä–∏—Ñ–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø–ª–∞—Ç—ã"""
    text = """‚ú® <b>–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ</b> ‚ú®
<u>–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:</u>
üü¶ 1 –ø—Ä–æ—Ñ–∏–ª—å
üü¶ 12 –∫–∞—Ä—É—Å–µ–ª–µ–π –≤ –º–µ—Å—è—Ü
üü¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤
üü¶ –ò–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤
üü¶ –î–∏–∑–∞–π–Ω –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
üü¶ –ü—Ä–æ–≥—Ä–µ–≤ –≤ —Å—Ç–æ—Ä–∏—Å
üü¶ –ù–µ–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ–≤
üí∞ –¶–µ–Ω–∞: 790‚ÇΩ

üöÄ <b>–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–∞—Ä–∏—Ñ</b> üöÄ
<u>–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:</u>
üü© 4 –ø—Ä–æ—Ñ–∏–ª—è
üü© –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—É—Å–µ–ª–µ–π 
üü© –ò–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤
üü© –î–∏–∑–∞–π–Ω –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
üü© –ü—Ä–æ–≥—Ä–µ–≤ –≤ —Å—Ç–æ—Ä–∏—Å
üü© –ù–µ–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ–≤
üü© –ò–¥–µ–∏ –¥–ª—è –≤–µ–±–∏–Ω–∞—Ä–æ–≤ 
üü© –°—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –≤–µ–±–∏–Ω–∞—Ä–æ–≤ 
üü© –ò–¥–µ–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–æ–∫ 
üü© –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –≤ —Ç–≤–æ–µ–π –Ω–∏—à–µ 
üü© –ò–¥–µ–∏ –¥–ª—è —Ç–≤–æ–∏—Ö –≤–∏–¥–µ–æ
üíé –¶–µ–Ω–∞: 1600‚ÇΩ
"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ", callback_data="pay_basic")],
        [InlineKeyboardButton(text="üí≥ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–∞—Ä–∏—Ñ", callback_data="pay_advanced")]
    ])

    await callback_query.message.answer(text, parse_mode="HTML", reply_markup=keyboard)


@router.callback_query(lambda c: c.data in ["pay_basic", "pay_advanced"])
async def process_payment(callback_query: CallbackQuery):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ YooKassa"""
    if callback_query.data == "pay_basic":
        amount = 790
        plan_name = "–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ"
    else:
        amount = 1600
        plan_name = "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–∞—Ä–∏—Ñ"

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —Å metadata (user_id, –ø–ª–∞–Ω)
    payment = Payment.create({
        "amount": {
            "value": str(amount),
            "currency": "RUB"
        },
        "confirmation": {
            "type": "redirect",
            "return_url": "https://example.com/success"  # –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
        },
        "capture": True,
        "description": f"–û–ø–ª–∞—Ç–∞ {plan_name}",
        "metadata": {
            "user_id": callback_query.from_user.id,
            "plan": plan_name
        },
        "test": False  # —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
    })

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
    await callback_query.message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>{plan_name}</b>.\n"
        f"–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: <b>{amount}‚ÇΩ</b>\n"
        f"üëâ <a href='{payment.confirmation.confirmation_url}'>–û–ø–ª–∞—Ç–∏—Ç—å</a>\n\n",
        parse_mode="HTML",
        disable_web_page_preview=True
    )
